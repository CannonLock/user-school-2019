{
    "docs": [
        {
            "location": "/",
            "text": "(Image copyright Ann Althouse, licensed under Creative Commons, \nhttp://www.flickr.com/photos/althouse/141467660/\n)\n\n\nOSG User School 2019\n\u00b6\n\n\nCould you transform your research with vast amounts of computing?\n\n\n\nCome spend a week at the beautiful University of Wisconsin\u2013Madison and learn how.\n\n\nDuring the school, July 15\u201319, you will learn to use high-throughput computing (HTC) systems\u00a0\u2014 at your\nown campus or using the national Open Science Grid (OSG)\u00a0\u2014 to run large-scale computing applications that are\nat the heart of today\u2019s cutting-edge science.  Through lectures, discussions, and \nlots of hands-on activities\n\nwith experienced OSG staff, you will learn how HTC systems work, how to run and manage lots of jobs and huge datasets to\nimplement a scientific computing workflow, and where to turn for more information and help.  Take a look at\n\nthe high-level curriculum and syllabus\n for more details.\n\n\nThe school is ideal for graduate students in any science or research domain where large-scale computing is a vital part\nof the research process, plus we will consider applications from advanced undergraduates, post-doctoral students,\nfaculty, and staff.  Students accepted to this program will receive financial support for basic travel and local costs\nassociated with the School.\n\n\nApplications\n\u00b6\n\n\nApplications are now closed and all applicants have been notified of their status.  We received a large number of\napplications this year, so thanks to everyone for your enthusiastic interest!\n\n\nInformation for Participants\n\u00b6\n\n\n\n\nCurriculum\n\n\nHigh-level curriculum\n\n\n\n\n\n\nLogistics\n\n\nGeneral information and travel schedule\n\n\nVisa requirements for non-resident aliens\n\n\nTravel planning to and from Madison\n\n\nHotel information\n\n\nLocal transportation within Madison\n\n\nSchool location\n\n\n\n\n\n\n\n\nContact Us\n\u00b6\n\n\nThe OSG User School is part of the \nOSG Outreach Area\n\u00a0\u2014 please visit\nthat site to learn about other OSG Outreach activities.\n\n\nIf you have any questions about the School, the application process, or anything else, feel free to email us:\n\n\nuser-school@opensciencegrid.org\n\n\n \u00a0 \n \u00a0 OSGUserSchool",
            "title": "User School 2019"
        },
        {
            "location": "/#osg-user-school-2019",
            "text": "Could you transform your research with vast amounts of computing?  Come spend a week at the beautiful University of Wisconsin\u2013Madison and learn how.  During the school, July 15\u201319, you will learn to use high-throughput computing (HTC) systems\u00a0\u2014 at your\nown campus or using the national Open Science Grid (OSG)\u00a0\u2014 to run large-scale computing applications that are\nat the heart of today\u2019s cutting-edge science.  Through lectures, discussions, and  lots of hands-on activities \nwith experienced OSG staff, you will learn how HTC systems work, how to run and manage lots of jobs and huge datasets to\nimplement a scientific computing workflow, and where to turn for more information and help.  Take a look at the high-level curriculum and syllabus  for more details.  The school is ideal for graduate students in any science or research domain where large-scale computing is a vital part\nof the research process, plus we will consider applications from advanced undergraduates, post-doctoral students,\nfaculty, and staff.  Students accepted to this program will receive financial support for basic travel and local costs\nassociated with the School.",
            "title": "OSG User School 2019"
        },
        {
            "location": "/#applications",
            "text": "Applications are now closed and all applicants have been notified of their status.  We received a large number of\napplications this year, so thanks to everyone for your enthusiastic interest!",
            "title": "Applications"
        },
        {
            "location": "/#information-for-participants",
            "text": "Curriculum  High-level curriculum    Logistics  General information and travel schedule  Visa requirements for non-resident aliens  Travel planning to and from Madison  Hotel information  Local transportation within Madison  School location",
            "title": "Information for Participants"
        },
        {
            "location": "/#contact-us",
            "text": "The OSG User School is part of the  OSG Outreach Area \u00a0\u2014 please visit\nthat site to learn about other OSG Outreach activities.  If you have any questions about the School, the application process, or anything else, feel free to email us:  user-school@opensciencegrid.org   \u00a0   \u00a0 OSGUserSchool",
            "title": "Contact Us"
        },
        {
            "location": "/curriculum/overview/",
            "text": "Curriculum and Syllabus\n\u00b6\n\n\nCurriculum Goals\n\u00b6\n\n\nAt a high level, the goal of the School is to help students learn to:\n\n\n\n\nDescribe the basic elements and architecture of a distributed computing system\n\n\nUse basic distributed computing tools to run jobs and manage data\n\n\nSelect reasonable tools and methods to solve scientific computing problems using distributed computing\n\n\nOutline the role of distributed computing, its history, current state and issues, and hopes for the future\n\n\nIdentify resources for support, further study, and development opportunities in distributed computing\n\n\n\n\nSyllabus\n\u00b6\n\n\nThe high-level syllabus for 2019 is below; a more detailed schedule will be published later as we get closer to the\nschool.\n\n\n\n\n\n\n\n\n\n\nMorning\n\n\nAfternoon\n\n\n\n\n\n\n\n\n\n\nMonday\n\n\nWelcome\nIntroduction to high-throughput computing\nRunning jobs locally with Condor\n\n\nIntroduction to high-throughput workflows\nRunning workflows locally with Condor\n\n\n\n\n\n\nTuesday\n\n\nIntroduction to grid computing and overlays\nBasic troubleshooting\n\n\nIntroduction to OSG\nRunning jobs using OSG glideins\nRunning on real resources\nOSG architecture\n\n\n\n\n\n\nWednesday\n\n\nDealing with real software\n(Especially R and MATLAB, but others as well)\n\n\nFree choice:\n\u2022\u00a0More details about how overlays systems work\n\u2022\u00a0Get one-on-one help with your computing work\n\u2022\u00a0Take a break and visit Madison\n\n\n\n\n\n\nThursday\n\n\nIntroduction to distributed storage\nUsing remote storage systems\n\n\nManaging large, distributed data\nIntroduction to grid security for end users\n\n\n\n\n\n\nFriday\n\n\nTurning scientific computing needs into HTC jobs\nEstimating resource needs, decomposing and running large jobs\nStrategies and technologies for handling large workflows\n\n\nPrinciples of high-throughput computing\nScientific computing showcase\nWhere to go and what to do next \u2014 resources, funding, etc.",
            "title": "High-level overview"
        },
        {
            "location": "/curriculum/overview/#curriculum-and-syllabus",
            "text": "",
            "title": "Curriculum and Syllabus"
        },
        {
            "location": "/curriculum/overview/#curriculum-goals",
            "text": "At a high level, the goal of the School is to help students learn to:   Describe the basic elements and architecture of a distributed computing system  Use basic distributed computing tools to run jobs and manage data  Select reasonable tools and methods to solve scientific computing problems using distributed computing  Outline the role of distributed computing, its history, current state and issues, and hopes for the future  Identify resources for support, further study, and development opportunities in distributed computing",
            "title": "Curriculum Goals"
        },
        {
            "location": "/curriculum/overview/#syllabus",
            "text": "The high-level syllabus for 2019 is below; a more detailed schedule will be published later as we get closer to the\nschool.      Morning  Afternoon      Monday  Welcome Introduction to high-throughput computing Running jobs locally with Condor  Introduction to high-throughput workflows Running workflows locally with Condor    Tuesday  Introduction to grid computing and overlays Basic troubleshooting  Introduction to OSG Running jobs using OSG glideins Running on real resources OSG architecture    Wednesday  Dealing with real software (Especially R and MATLAB, but others as well)  Free choice: \u2022\u00a0More details about how overlays systems work \u2022\u00a0Get one-on-one help with your computing work \u2022\u00a0Take a break and visit Madison    Thursday  Introduction to distributed storage Using remote storage systems  Managing large, distributed data Introduction to grid security for end users    Friday  Turning scientific computing needs into HTC jobs Estimating resource needs, decomposing and running large jobs Strategies and technologies for handling large workflows  Principles of high-throughput computing Scientific computing showcase Where to go and what to do next \u2014 resources, funding, etc.",
            "title": "Syllabus"
        },
        {
            "location": "/logistics/",
            "text": "OSG User School 2019 Logistics\n\u00b6\n\n\nThe following pages describe some of the important information about your visit to Madison for the OSG User School.\nPlease read them carefully.  There will be other pages with local details soon.\n\n\n\n\nVisa requirements for non-resident aliens\n\n\nTravel planning to and from Madison\n\n\nHotel information\n\n\nLocal transportation within Madison\n\n\nSchool location\n\n\n\n\nAs always: If you have questions, email us at \nuser-school@opensciencegrid.org\n.  Use that email address for all emails\nabout the organization of the OSG School.\n\n\nGeneral Information About the School Schedule\n\u00b6\n\n\nTravel Schedule\n\u00b6\n\n\nFor planning your trip:\n\n\n\n\nArrive on Sunday, July 14, 2019,\n prior to 6 p.m. (if possible).  Classes begin on Monday morning, but there is a\n  welcome dinner on Sunday evening for all participants (including instructors).  This is a nice way to get to know each\n  other and to start the week.\n\n\n\n\n\n\n\n\n\nDepart on Saturday, July 20, 2019,\n any time.  The School ends with another dinner on Friday evening, so it is best\n  to stay that night.\n\n\n\n\nIf we offered to pay for your hotel room, we will pay for the six nights of this schedule.\n\n\nSchool Hours\n\u00b6\n\n\nThe School is Monday through Friday, 9:00 a.m. to about 5:00 p.m.; the lecture hall doors open at about 8:00 a.m. for\nbreakfast, and there will be optional work sessions on Monday, Tuesday, and Thursday evenings.  A detailed schedule will\nbe available before the School begins.\n\n\nContact Information\n\u00b6\n\n\nIf you have questions, do not wait to contact us!\n\n\nuser-school@opensciencegrid.org",
            "title": "General information"
        },
        {
            "location": "/logistics/#osg-user-school-2019-logistics",
            "text": "The following pages describe some of the important information about your visit to Madison for the OSG User School.\nPlease read them carefully.  There will be other pages with local details soon.   Visa requirements for non-resident aliens  Travel planning to and from Madison  Hotel information  Local transportation within Madison  School location   As always: If you have questions, email us at  user-school@opensciencegrid.org .  Use that email address for all emails\nabout the organization of the OSG School.",
            "title": "OSG User School 2019 Logistics"
        },
        {
            "location": "/logistics/#general-information-about-the-school-schedule",
            "text": "",
            "title": "General Information About the School Schedule"
        },
        {
            "location": "/logistics/#travel-schedule",
            "text": "For planning your trip:   Arrive on Sunday, July 14, 2019,  prior to 6 p.m. (if possible).  Classes begin on Monday morning, but there is a\n  welcome dinner on Sunday evening for all participants (including instructors).  This is a nice way to get to know each\n  other and to start the week.     Depart on Saturday, July 20, 2019,  any time.  The School ends with another dinner on Friday evening, so it is best\n  to stay that night.   If we offered to pay for your hotel room, we will pay for the six nights of this schedule.",
            "title": "Travel Schedule"
        },
        {
            "location": "/logistics/#school-hours",
            "text": "The School is Monday through Friday, 9:00 a.m. to about 5:00 p.m.; the lecture hall doors open at about 8:00 a.m. for\nbreakfast, and there will be optional work sessions on Monday, Tuesday, and Thursday evenings.  A detailed schedule will\nbe available before the School begins.",
            "title": "School Hours"
        },
        {
            "location": "/logistics/#contact-information",
            "text": "If you have questions, do not wait to contact us!  user-school@opensciencegrid.org",
            "title": "Contact Information"
        },
        {
            "location": "/logistics/personal-info/",
            "text": "Documentation Requirements for Non-Resident Aliens\n\u00b6\n\n\nThis page is for Non-Resident Aliens only.\n  If you are a United States citizen or\npermanent resident, this page does not apply to you.\n\n\nFor the University of Wisconsin to pay for your travel, hotel, or meal expenses, we must have certain personal\ninformation from you.  We collect as little information as possible and do not share it except with University\nadministrative staff who need it.  Most of what we need comes from the online form you completed after accepting our\ninvitation to attend.\n\n\nWhen you come to the School in Madison, we will need to look at and verify your travel documents.  Please bring all\ntravel documents to the School!\n\n\nNote: If you are not being reimbursed for any meals and/or travel for the school or if you are from UW-Madison or the\nMadison area, these documents are not required.\n\n\nTasks To Do Now\n\u00b6\n\n\nPlease check your passport and visa for travel in the United States now.  Make sure that all documents are valid from\nnow and until after the School ends.  If any documents are expired or will expire before the end of the School:\n\n\n\n\nTell us immediately, so that we can help you\n\n\nBegin the process for updating your documents immediately\n\n\nDo whatever you can to expedite the update process\n\n\n\n\nThe University of Wisconsin cannot pay for or reimburse you for costs without valid travel documents.  We have no\ncontrol over this policy and there are no exceptions.\n\n\nIf you are in the United States on a J-1 Scholar visa,\n there\nare extra steps needed to make the University and Federal government happy.  If you have a J-1 visa and have not heard\nfrom us about it already, please email us immediately so that we can help.\n\n\nDocuments to Bring to the School\n\u00b6\n\n\nWhen you come to Madison, you must bring:\n\n\n\n\nPassport\n\n\nU.S. visa\n\n\nU.S. Customs and Border Protection \nform I-94\n\n\nIf you entered the U.S. before 30 April 2013, the I-94 should be stapled into your passport \u2014 do not remove it!\n\n\nIf you entered the U.S. after 30 April 2013, the I-94 is stored electronically;\n  \nyou can request a copy to print from CBP\n\n\nIf you are Canadian, you may use a second form of picture ID instead of the I-94 if you did not obtain an I-94.\n\n\n\n\n\n\nAdditional forms specified in the table below:\n\n\n\n\n\n\n\n\n\n\nIf you have this visa\n\n\nWe will also need\n\n\n\n\n\n\n\n\n\n\nF-1 (Student)\n\n\nForm I-20 (original document, not a copy)\n\n\n\n\n\n\nJ-1 (Visitor)\n\n\nForm DS-2019 (original document, not a copy)\n\n\n\n\n\n\nVisa Waiver Program\n\n\nPaper copy of ESTA Authorization\n\n\n\n\n\n\n\n\nPlease bring all required information and documents to the School, especially on Tuesday, July 16.  School staff will\nmake copies of the documents and return them to you as quickly as possible.  We will announce further details in class.",
            "title": "Visa requirements"
        },
        {
            "location": "/logistics/personal-info/#documentation-requirements-for-non-resident-aliens",
            "text": "This page is for Non-Resident Aliens only.   If you are a United States citizen or\npermanent resident, this page does not apply to you.  For the University of Wisconsin to pay for your travel, hotel, or meal expenses, we must have certain personal\ninformation from you.  We collect as little information as possible and do not share it except with University\nadministrative staff who need it.  Most of what we need comes from the online form you completed after accepting our\ninvitation to attend.  When you come to the School in Madison, we will need to look at and verify your travel documents.  Please bring all\ntravel documents to the School!  Note: If you are not being reimbursed for any meals and/or travel for the school or if you are from UW-Madison or the\nMadison area, these documents are not required.",
            "title": "Documentation Requirements for Non-Resident Aliens"
        },
        {
            "location": "/logistics/personal-info/#tasks-to-do-now",
            "text": "Please check your passport and visa for travel in the United States now.  Make sure that all documents are valid from\nnow and until after the School ends.  If any documents are expired or will expire before the end of the School:   Tell us immediately, so that we can help you  Begin the process for updating your documents immediately  Do whatever you can to expedite the update process   The University of Wisconsin cannot pay for or reimburse you for costs without valid travel documents.  We have no\ncontrol over this policy and there are no exceptions.  If you are in the United States on a J-1 Scholar visa,  there\nare extra steps needed to make the University and Federal government happy.  If you have a J-1 visa and have not heard\nfrom us about it already, please email us immediately so that we can help.",
            "title": "Tasks To Do Now"
        },
        {
            "location": "/logistics/personal-info/#documents-to-bring-to-the-school",
            "text": "When you come to Madison, you must bring:   Passport  U.S. visa  U.S. Customs and Border Protection  form I-94  If you entered the U.S. before 30 April 2013, the I-94 should be stapled into your passport \u2014 do not remove it!  If you entered the U.S. after 30 April 2013, the I-94 is stored electronically;\n   you can request a copy to print from CBP  If you are Canadian, you may use a second form of picture ID instead of the I-94 if you did not obtain an I-94.    Additional forms specified in the table below:      If you have this visa  We will also need      F-1 (Student)  Form I-20 (original document, not a copy)    J-1 (Visitor)  Form DS-2019 (original document, not a copy)    Visa Waiver Program  Paper copy of ESTA Authorization     Please bring all required information and documents to the School, especially on Tuesday, July 16.  School staff will\nmake copies of the documents and return them to you as quickly as possible.  We will announce further details in class.",
            "title": "Documents to Bring to the School"
        },
        {
            "location": "/logistics/travel/",
            "text": "Travel To and From Madison\n\u00b6\n\n\nWhether we offered to pay your travel costs or not, please make sure that we get a copy of your travel plans so that we\nknow when to expect you here and can plan accurately.  (If we offered to pay for your hotel room, we will make a room\nreservation and pay for the six nights of the schedule.)\n\n\nFind the numbered section below that applies to you:\n\n\n1. We Offered to Pay for Your Travel\n\u00b6\n\n\nOur goal is to find reasonable and comfortable travel options for you to come to Madison and return home.  At the same\ntime, we must stay within our budget and follow all University of Wisconsin rules about arranging and paying for your\ntravel costs.  So let\u2019s work together to find something that makes sense for everyone.\n\n\nHere are a few ideas that have worked in the past to help some School travelers:\n\n\n\n\n\n\nIf you are less than 300 miles from Madison, consider driving; we can reimburse mileage and tolls up to a point.  Or\n  look into bus routes, especially from larger cities like Chicago.\n\n\n\n\n\n\nIf you fly, it may be much cheaper to fly to Milwaukee (1\u00bd hours away) or Chicago (2\u00bd hours away), then\n  take a direct bus to Madison.  The buses are very comfortable, have wi-fi, and run frequently.  See below.\n\n\n\n\n\n\nAlso if you fly, be flexible about departure times \u2014 early and late flights are often the least expensive.  Now we do\n  not like very early or very late flights any more than you do, so we will work hard to find reasonable flight times.\n\n\n\n\n\n\nNote:\n Please try to complete your travel plans by mid-June, before rates go up significantly.\n\n\nTravel by Airplane\n\u00b6\n\n\nDo NOT buy your own airline tickets\n.  University rules require that our travel\nagency, Fox World Travel (FWT), purchases your tickets.\n\n\nUse the following information to get air travel tickets:\n\n\n\n\n\n\nGather your travel information: full legal name (as it is written on government IDs), date of birth, phone number;\n  travel dates and starting/ending location(s); and any travel preferences.  Then, contact Fox World Travel directly:\n\n\n\n\nBy email:\n send to \nuwgroups@foxworldtravel.com\n and include your name (e.g., \u201cT. Cartwright\u201d) and\n  \nGroup Code 09UW3749\n in the subject line.\n\n\nBy phone:\n From the U.S., call 866-230-8787 toll free, or internationally, call +1\u00a0920-230-6467.  Select\n  option 4, and tell them you are using \nGroup Code 09UW3749\n\n\n\n\n\n\n\n\nWe must review and approve \nmost\n trips.  FWT is authorized to purchase tickets directly only in the easiest cases.\n  But if the FWT agent says that your trip must be reviewed, do not worry!  It just means that we need to check our\n  budget, make sure that we have considered all reasonable options, and are following all University rules.  Hopefully\n  we can approve your first choice, otherwise we will work with you and FWT to find one or more reasonable options.\n  Some common reasons for a trip needing review are: total trip cost over $475, travel starting and ending at different\n  locations, and travel on dates other than July 14 and 20.\n\n\n\n\n\n\nApproval takes time, so it may take up to a day to get final confirmation.  Airplane tickets cannot be held without\n  purchase over a weekend, so it is best to avoid contacting FWT late on Fridays.  Also note that FWT and\n  UW\u2013Madison are closed on Monday, May 27, for Memorial Day.\n\n\n\n\n\n\nPlease be considerate of the FWT agent(s) you work with.  They work hard to find good options for you, but they must\n  also follow our rules.  If you feel that they are not providing the options that you want, you should email us.  We\n  will try to understand the options that you want and that FWT is providing, and help resolve any issues.  Do not argue\n  with the FWT agents, especially about options you find online\u00a0\u2014 there are many reasons why that option\n  might not be available to us.\n\n\n\n\n\n\nTravel by Bus\n\u00b6\n\n\nFor some nearby locations, or in addition to air travel to Chicago or Milwaukee, it may be helpful to take a bus to\nMadison.  Bus companies that School travelers have used a great deal in the past are:\n\n\n\n\nVan Galder Bus\n, especially from Chicago\n\n\nBadger Bus\n, especially from Milwaukee\n\n\n\n\nYou may purchase bus tickets through Fox World Travel (FWT):\n\n\n\n\nBy email:\n send to \nuwgroups@foxworldtravel.com\n and include your name (e.g., \u201cT. Cartwright\u201d) and\n  \nGroup Code 09UW3749\n in the subject line.\n\n\nBy phone:\n From the U.S., call 866-230-8787 toll free, or internationally, call +1\u00a0920-230-6467.  Select\n  option 4, and tell them you are using \nGroup Code 09UW3749\n\n\n\n\nOr for maximum flexibility, you may purchase bus tickets yourself \nbefore or on\n the day of travel.  If you purchase\nyour own tickets, you must get our approval for the estimated cost first, then request reimbursement from us after the\nSchool.\n\n\nIf you purchase your own tickets, save the original receipt (even if by email).  It is best to have a detailed receipt\n(including your name, itinerary, date of purchase, and total amount paid), but a regular ticket stub (e.g., without your\nname or date) should work fine.  Just get what you can!\n\n\nBe sure to email us with your bus plans, including:\n\n\n\n\nTransportation provider(s) (e.g., Van Galder bus)\n\n\nArrival date and approximate time\n\n\nDeparture date and approximate time\n\n\nArrival and departure location within Madison\n\n\nActual or estimated cost (indicate which)\n\n\n\n\nTravel by Personal Car\n\u00b6\n\n\nIf you are driving to Madison, you will be reimbursed the mileage rate of $0.58 per mile for the shortest round-trip\ndistance (as calculated by Google Maps), plus tolls.  Also, we will pay for parking costs for the week at the hotel in\nMadison (but not elsewhere).  We recommend keeping your receipts for tolls.\n\n\nNote: Due to the high mileage reimbursement rate, driving can be an expensive option!  We reserve the right to limit\nyour total driving reimbursement, so work with us on the details.\n\n\nTo travel by personal car, please check with us first.  We may search for comparable flight options, to make sure that\ndriving is indeed the least expensive method.\n\n\nBe sure to email us with your travel plans as soon as possible.  Try to include:\n\n\n\n\nDeparture date from home, location (for mileage calculation), and approximate time of arrival in Madison\n\n\nDeparture date and approximate time from Madison, and return location (for mileage calculation) if different than above\n\n\n\n\n2. You Are Paying for Your Travel\n\u00b6\n\n\nIf you are paying for your own travel or if someone else is paying for it, go ahead and make your travel arrangements\nnow!  Just remember to arrive on Sunday, July 14, before 6pm and depart on Saturday, July 20 (or else check with us\nfirst).\n\n\nBe sure to email us with your travel plans as soon as possible.  Try to include:\n\n\n\n\nTransportation provider(s) (e.g., airline)\n\n\nArrival date and approximate time\n\n\nDeparture date and approximate time\n\n\nArrival and departure location within Madison (e.g., airport, bus station, etc.)",
            "title": "Travel planning"
        },
        {
            "location": "/logistics/travel/#travel-to-and-from-madison",
            "text": "Whether we offered to pay your travel costs or not, please make sure that we get a copy of your travel plans so that we\nknow when to expect you here and can plan accurately.  (If we offered to pay for your hotel room, we will make a room\nreservation and pay for the six nights of the schedule.)  Find the numbered section below that applies to you:",
            "title": "Travel To and From Madison"
        },
        {
            "location": "/logistics/travel/#1-we-offered-to-pay-for-your-travel",
            "text": "Our goal is to find reasonable and comfortable travel options for you to come to Madison and return home.  At the same\ntime, we must stay within our budget and follow all University of Wisconsin rules about arranging and paying for your\ntravel costs.  So let\u2019s work together to find something that makes sense for everyone.  Here are a few ideas that have worked in the past to help some School travelers:    If you are less than 300 miles from Madison, consider driving; we can reimburse mileage and tolls up to a point.  Or\n  look into bus routes, especially from larger cities like Chicago.    If you fly, it may be much cheaper to fly to Milwaukee (1\u00bd hours away) or Chicago (2\u00bd hours away), then\n  take a direct bus to Madison.  The buses are very comfortable, have wi-fi, and run frequently.  See below.    Also if you fly, be flexible about departure times \u2014 early and late flights are often the least expensive.  Now we do\n  not like very early or very late flights any more than you do, so we will work hard to find reasonable flight times.    Note:  Please try to complete your travel plans by mid-June, before rates go up significantly.",
            "title": "1. We Offered to Pay for Your Travel"
        },
        {
            "location": "/logistics/travel/#travel-by-airplane",
            "text": "Do NOT buy your own airline tickets .  University rules require that our travel\nagency, Fox World Travel (FWT), purchases your tickets.  Use the following information to get air travel tickets:    Gather your travel information: full legal name (as it is written on government IDs), date of birth, phone number;\n  travel dates and starting/ending location(s); and any travel preferences.  Then, contact Fox World Travel directly:   By email:  send to  uwgroups@foxworldtravel.com  and include your name (e.g., \u201cT. Cartwright\u201d) and\n   Group Code 09UW3749  in the subject line.  By phone:  From the U.S., call 866-230-8787 toll free, or internationally, call +1\u00a0920-230-6467.  Select\n  option 4, and tell them you are using  Group Code 09UW3749     We must review and approve  most  trips.  FWT is authorized to purchase tickets directly only in the easiest cases.\n  But if the FWT agent says that your trip must be reviewed, do not worry!  It just means that we need to check our\n  budget, make sure that we have considered all reasonable options, and are following all University rules.  Hopefully\n  we can approve your first choice, otherwise we will work with you and FWT to find one or more reasonable options.\n  Some common reasons for a trip needing review are: total trip cost over $475, travel starting and ending at different\n  locations, and travel on dates other than July 14 and 20.    Approval takes time, so it may take up to a day to get final confirmation.  Airplane tickets cannot be held without\n  purchase over a weekend, so it is best to avoid contacting FWT late on Fridays.  Also note that FWT and\n  UW\u2013Madison are closed on Monday, May 27, for Memorial Day.    Please be considerate of the FWT agent(s) you work with.  They work hard to find good options for you, but they must\n  also follow our rules.  If you feel that they are not providing the options that you want, you should email us.  We\n  will try to understand the options that you want and that FWT is providing, and help resolve any issues.  Do not argue\n  with the FWT agents, especially about options you find online\u00a0\u2014 there are many reasons why that option\n  might not be available to us.",
            "title": "Travel by Airplane"
        },
        {
            "location": "/logistics/travel/#travel-by-bus",
            "text": "For some nearby locations, or in addition to air travel to Chicago or Milwaukee, it may be helpful to take a bus to\nMadison.  Bus companies that School travelers have used a great deal in the past are:   Van Galder Bus , especially from Chicago  Badger Bus , especially from Milwaukee   You may purchase bus tickets through Fox World Travel (FWT):   By email:  send to  uwgroups@foxworldtravel.com  and include your name (e.g., \u201cT. Cartwright\u201d) and\n   Group Code 09UW3749  in the subject line.  By phone:  From the U.S., call 866-230-8787 toll free, or internationally, call +1\u00a0920-230-6467.  Select\n  option 4, and tell them you are using  Group Code 09UW3749   Or for maximum flexibility, you may purchase bus tickets yourself  before or on  the day of travel.  If you purchase\nyour own tickets, you must get our approval for the estimated cost first, then request reimbursement from us after the\nSchool.  If you purchase your own tickets, save the original receipt (even if by email).  It is best to have a detailed receipt\n(including your name, itinerary, date of purchase, and total amount paid), but a regular ticket stub (e.g., without your\nname or date) should work fine.  Just get what you can!  Be sure to email us with your bus plans, including:   Transportation provider(s) (e.g., Van Galder bus)  Arrival date and approximate time  Departure date and approximate time  Arrival and departure location within Madison  Actual or estimated cost (indicate which)",
            "title": "Travel by Bus"
        },
        {
            "location": "/logistics/travel/#travel-by-personal-car",
            "text": "If you are driving to Madison, you will be reimbursed the mileage rate of $0.58 per mile for the shortest round-trip\ndistance (as calculated by Google Maps), plus tolls.  Also, we will pay for parking costs for the week at the hotel in\nMadison (but not elsewhere).  We recommend keeping your receipts for tolls.  Note: Due to the high mileage reimbursement rate, driving can be an expensive option!  We reserve the right to limit\nyour total driving reimbursement, so work with us on the details.  To travel by personal car, please check with us first.  We may search for comparable flight options, to make sure that\ndriving is indeed the least expensive method.  Be sure to email us with your travel plans as soon as possible.  Try to include:   Departure date from home, location (for mileage calculation), and approximate time of arrival in Madison  Departure date and approximate time from Madison, and return location (for mileage calculation) if different than above",
            "title": "Travel by Personal Car"
        },
        {
            "location": "/logistics/travel/#2-you-are-paying-for-your-travel",
            "text": "If you are paying for your own travel or if someone else is paying for it, go ahead and make your travel arrangements\nnow!  Just remember to arrive on Sunday, July 14, before 6pm and depart on Saturday, July 20 (or else check with us\nfirst).  Be sure to email us with your travel plans as soon as possible.  Try to include:   Transportation provider(s) (e.g., airline)  Arrival date and approximate time  Departure date and approximate time  Arrival and departure location within Madison (e.g., airport, bus station, etc.)",
            "title": "2. You Are Paying for Your Travel"
        },
        {
            "location": "/logistics/hotel/",
            "text": ".hi { font-weight: bold; color: #F60; }\n\n\n\n\nHotel Information\n\u00b6\n\n\nWe reserved a block of rooms at an area hotel for participants from outside\nMadison.\n\n\n\n\nBest Western Premier Park Hotel\n22 South\n  Carroll Street, Madison, WI\n+1\u00a0(608)\u00a0285\u20118000\n\n\n\n\nPlease note:\n We will reserve your room for you, so do\nnot contact the hotel yourself to reserve a room.  Exceptions to this rule are\nrare and clearly communicated.\n\n\nOther important hotel information:\n\n\n\n\nThis hotel has a free shuttle service; see the\n  \nlocal transportation page\n for more\n  information\n\n\nBefore the School, we will send you an email with your hotel confirmation\n  number\n\n\nWe pay only for basic room costs\u00a0\u2014 you must provide a credit card\n  to cover extra costs\n\n\nThere is one School participant per room; to have friends or family stay with\n  you, \nplease ask us now",
            "title": "Hotel information"
        },
        {
            "location": "/logistics/hotel/#hotel-information",
            "text": "We reserved a block of rooms at an area hotel for participants from outside\nMadison.   Best Western Premier Park Hotel 22 South\n  Carroll Street, Madison, WI +1\u00a0(608)\u00a0285\u20118000   Please note:  We will reserve your room for you, so do\nnot contact the hotel yourself to reserve a room.  Exceptions to this rule are\nrare and clearly communicated.  Other important hotel information:   This hotel has a free shuttle service; see the\n   local transportation page  for more\n  information  Before the School, we will send you an email with your hotel confirmation\n  number  We pay only for basic room costs\u00a0\u2014 you must provide a credit card\n  to cover extra costs  There is one School participant per room; to have friends or family stay with\n  you,  please ask us now",
            "title": "Hotel Information"
        },
        {
            "location": "/logistics/local-transportation/",
            "text": ".hi { font-weight: bold; color: rgb(255, 102, 00); }\n\n\n\n\nTravel in Madison\n\u00b6\n\n\nYou are responsible for your own transportation within Madison, but we will help\ncoordinate and can reimburse costs between the airport and your hotel.\n\n\nTravel Between the Madison Airport and Your Hotel\n\u00b6\n\n\nThe School hotel (Best Western) provides free shuttle service from and back to\nthe Madison airport, when available.  \nWe will help organize\ngroups\n to take shuttles and taxis, based on arrival and departure times.\nShuttle/taxi groups will be formed and emailed shortly before the School itself.\n\n\nGenerally, the hotel shuttle is free and direct, so it is the best option\nbetween airport and hotel.  If a shuttle is not available, you may take a taxi\nor ride-sharing service and be reimbursed after the School.  There are several\ngood taxi companies in Madison, including\n\nGreen Cab\n,\n\nBadger Cab\n, and\n\nUnion Cab\n, and both \nLyft\n\nand \nUber\n are active in Madison.  Taxis are readily\navailable at the Madison airport, but nearly everywhere else (e.g., from your\nhotel back to the airport), you should contact the company and request a ride or\nmake a reservation in advance.  Note that we can reimburse you only for taxi or\nride-sharing rides between the airport and hotel/campus area.\n\n\nTravel On and Near Campus\n\u00b6\n\n\nThe Best Western hotel is about 1\u00bc miles (2.1 km) from the classroom\nbuilding.  There are many good options for getting between your hotel and the\nSchool, plus other sights, restaurants, and other activities in Madison.\n\n\nWalking\n\u00b6\n\n\nIt is easy to walk in and around the University of Wisconsin\u2013Madison\ncampus.  Use a mapping app or ask us or your hotel for a map.  In particular,\nState Street\u00a0\u2014 which connects the Capitol Square with the UW\ncampus\u00a0\u2014 is full of great shops and restaurants and is worth\nstrolling along while you are here.\n\n\nHotel Shuttle\n\u00b6\n\n\nSee above; the hotel has a free shuttle that can be used to transport students\nbetween the hotel and the School\u2026 and other places.  Ask the hotel for\nmore information and availability.\n\n\nCity of Madison Metro Bus Service\n\u00b6\n\n\nMany \nMadison Metro\n buses stop near the\nhotels and pass through the University of Wisconsin\u2013Madison campus.  Bus\nfare is $2.00, and transfers from one route to another are free.  If you plan to\nuse buses to travel to and from the School every day, contact us, and we may be\nable to buy a bus pass for you or explain how to do so.\n\n\nThe official\n\nMadison Metro Bus page\n\nprovides route maps and times for all Madison buses.  Google Maps and the\nWisconsin phone app also do a good job.\n\n\nTaxis and Ride-Sharing Services\n\u00b6\n\n\nAs listed above in the airport-hotel section, there are several taxi companies\nand ride sharing services in Madison.  \nNote:\n We can reimburse you only for\ntransportation for School purposes, not personal reasons, and even then, only\nfor trips between the airport and either the hotel or the classroom building.\n\n\nMadison BCycle\n\u00b6\n\n\nMadison is a great city to bike in, and there is even a short-term bike rental\nsystem called \nBCycle\n here.  For instance, it is\npossible to pick up a bike at Union South, next to the classroom building, and\nthen drop it off at one of many locations around the central part of Madison.\nSee the website for more details.  While not terribly expensive, this is not a\ncost that we can reimburse.",
            "title": "Local transportation"
        },
        {
            "location": "/logistics/local-transportation/#travel-in-madison",
            "text": "You are responsible for your own transportation within Madison, but we will help\ncoordinate and can reimburse costs between the airport and your hotel.",
            "title": "Travel in Madison"
        },
        {
            "location": "/logistics/local-transportation/#travel-between-the-madison-airport-and-your-hotel",
            "text": "The School hotel (Best Western) provides free shuttle service from and back to\nthe Madison airport, when available.   We will help organize\ngroups  to take shuttles and taxis, based on arrival and departure times.\nShuttle/taxi groups will be formed and emailed shortly before the School itself.  Generally, the hotel shuttle is free and direct, so it is the best option\nbetween airport and hotel.  If a shuttle is not available, you may take a taxi\nor ride-sharing service and be reimbursed after the School.  There are several\ngood taxi companies in Madison, including Green Cab , Badger Cab , and Union Cab , and both  Lyft \nand  Uber  are active in Madison.  Taxis are readily\navailable at the Madison airport, but nearly everywhere else (e.g., from your\nhotel back to the airport), you should contact the company and request a ride or\nmake a reservation in advance.  Note that we can reimburse you only for taxi or\nride-sharing rides between the airport and hotel/campus area.",
            "title": "Travel Between the Madison Airport and Your Hotel"
        },
        {
            "location": "/logistics/local-transportation/#travel-on-and-near-campus",
            "text": "The Best Western hotel is about 1\u00bc miles (2.1 km) from the classroom\nbuilding.  There are many good options for getting between your hotel and the\nSchool, plus other sights, restaurants, and other activities in Madison.",
            "title": "Travel On and Near Campus"
        },
        {
            "location": "/logistics/local-transportation/#walking",
            "text": "It is easy to walk in and around the University of Wisconsin\u2013Madison\ncampus.  Use a mapping app or ask us or your hotel for a map.  In particular,\nState Street\u00a0\u2014 which connects the Capitol Square with the UW\ncampus\u00a0\u2014 is full of great shops and restaurants and is worth\nstrolling along while you are here.",
            "title": "Walking"
        },
        {
            "location": "/logistics/local-transportation/#hotel-shuttle",
            "text": "See above; the hotel has a free shuttle that can be used to transport students\nbetween the hotel and the School\u2026 and other places.  Ask the hotel for\nmore information and availability.",
            "title": "Hotel Shuttle"
        },
        {
            "location": "/logistics/local-transportation/#city-of-madison-metro-bus-service",
            "text": "Many  Madison Metro  buses stop near the\nhotels and pass through the University of Wisconsin\u2013Madison campus.  Bus\nfare is $2.00, and transfers from one route to another are free.  If you plan to\nuse buses to travel to and from the School every day, contact us, and we may be\nable to buy a bus pass for you or explain how to do so.  The official Madison Metro Bus page \nprovides route maps and times for all Madison buses.  Google Maps and the\nWisconsin phone app also do a good job.",
            "title": "City of Madison Metro Bus Service"
        },
        {
            "location": "/logistics/local-transportation/#taxis-and-ride-sharing-services",
            "text": "As listed above in the airport-hotel section, there are several taxi companies\nand ride sharing services in Madison.   Note:  We can reimburse you only for\ntransportation for School purposes, not personal reasons, and even then, only\nfor trips between the airport and either the hotel or the classroom building.",
            "title": "Taxis and Ride-Sharing Services"
        },
        {
            "location": "/logistics/local-transportation/#madison-bcycle",
            "text": "Madison is a great city to bike in, and there is even a short-term bike rental\nsystem called  BCycle  here.  For instance, it is\npossible to pick up a bike at Union South, next to the classroom building, and\nthen drop it off at one of many locations around the central part of Madison.\nSee the website for more details.  While not terribly expensive, this is not a\ncost that we can reimburse.",
            "title": "Madison BCycle"
        },
        {
            "location": "/logistics/location/",
            "text": "School Location\n\u00b6\n\n\nThe school will be held at the\n\nUniversity of Wisconsin\u2013Madison\n in the\n\nComputer Sciences Department\n, located at\n\n1210 West Dayton Street, Madison, WI, 53706\n.\nThe main classroom is Room 1240.\n\n\nSee the \nlocal transportation\n page for\nsuggestions about getting around Madison.\n\n\nComputer Sciences Building, Room 1240\n\u00b6\n\n\nSchool sessions, breakfasts, and lunches are held in \nRoom 1240\n:\n\n\n\n\nEnter the Computer Sciences building through the glass doors on Dayton Street\n\n\nTurn left and go through two sets of double doors\n\n\nWalk down the hallway just a bit\n\n\nRoom 1240 is on the right, up the ramp or a few stairs\n\n\n\n\nThe Computer Sciences building is a bit confusing, especially if you use other\nentrances.  However, there are signs that guide you to room 1240.  You can\nalways ask people for directions if you get lost.",
            "title": "School location"
        },
        {
            "location": "/logistics/location/#school-location",
            "text": "The school will be held at the University of Wisconsin\u2013Madison  in the Computer Sciences Department , located at 1210 West Dayton Street, Madison, WI, 53706 .\nThe main classroom is Room 1240.  See the  local transportation  page for\nsuggestions about getting around Madison.",
            "title": "School Location"
        },
        {
            "location": "/logistics/location/#computer-sciences-building-room-1240",
            "text": "School sessions, breakfasts, and lunches are held in  Room 1240 :   Enter the Computer Sciences building through the glass doors on Dayton Street  Turn left and go through two sets of double doors  Walk down the hallway just a bit  Room 1240 is on the right, up the ramp or a few stairs   The Computer Sciences building is a bit confusing, especially if you use other\nentrances.  However, there are signs that guide you to room 1240.  You can\nalways ask people for directions if you get lost.",
            "title": "Computer Sciences Building, Room 1240"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/",
            "text": "Monday Exercise 4.1: Refresher \u2013 Submitting Multiple Jobs\n\u00b6\n\n\nThe goal of this exercise is to map the physical locations of some worker nodes in our local cluster.\nTo do this, you will write a simple submit file that will queue multiple jobs and then manually collate the results.\n\n\nWhere in the world are my jobs?\n\u00b6\n\n\nTo find the physical location of the computers your jobs our running on, you will use a method called \ngeolocation\n.\nGeolocation uses a registry to match a computer\u2019s network address to an approximate latitude and longitude.\n\n\nGeolocating several machines\n\u00b6\n\n\nNow, let\u2019s try to remember some basic HTCondor ideas from earlier today:\n\n\n\n\nLog in to \nlearn.chtc.wisc.edu\n\n\nCreate and change into a new folder for this exercise, for example \nmonday-4.1\n\n\n\n\nDownload the geolocation code:\n\n\nusername@learn $\n wget http://proxy.chtc.wisc.edu/SQUID/osgschool19/location-wrapper.sh \n\\\n\n                 http://proxy.chtc.wisc.edu/SQUID/osgschool19/wn-geoip.tar.gz\n\n\n\n\n\nYou will be using \nlocation-wrapper.sh\n as your executable and \nwn-geoip.tar.gz\n as an input file.\n\n\n\n\n\n\nAs always, ensure that your executable has the proper permissions (hint: try running it from the command line)\n\n\n\n\n\n\nCreate a submit file that generates \nfifty\n jobs that run \nlocation-wrapper.sh\n, transfers \nwn-geoip.tar.gz\n as an\n    input file, and uses the \n$(Process)\n macro to write different \noutput\n and \nerror\n files.\n    Also, add the following requirement to the submit file (it's not important to know what it does):\n\n\nRequirements\n \n=\n \n(\nHAS_CVMFS_oasis_opensciencegrid_org\n \n=?=\n \nTRUE\n)\n\n\n\n\n\n\nTry to do this step without looking at materials from earlier today.\nBut if you are stuck, see \ntoday\u2019s exercise 2.2\n.\n\n\n\n\n\n\nSubmit your jobs and wait for the results\n\n\n\n\n\n\nCollating your results\n\u00b6\n\n\nNow that you have your results, it's time to summarize them.\nRather than inspecting each output file individually, you can use the \ncat\n command to print the results from all of\nyour output files at once.\nIf all of your output files have the format \nlocation-#.out\n (e.g., \nlocation-10.out\n), your command will look something\nlike this:\n\n\nuser@learn $\n cat location-*.out\n\n\n\n\n\nThe \n*\n is a wildcard so the above cat command runs on all files that start with \nlocation-\n and end in \n.out\n.\nAdditionally, you can use \ncat\n in combination with the \nsort\n and \nuniq\n commands using \"pipes\" (\n|\n) to print only\nthe unique results:\n\n\nuser@learn $\n cat location-*.out \n|\n sort \n|\n uniq\n\n\n\n\n\nMapping your results\n\u00b6\n\n\nTo visualize the locations of the machines that your jobs ran on, you will be using \nhttp://www.mapcustomizer.com/\n.\nCopy and paste the collated results into the text box that pops up when clicking on the 'Bulk Entry' button on the\nright-hand side.\nWhere did your jobs run?\n\n\nNext exercise\n\u00b6\n\n\nOnce completed, move onto the next exercise: \nLogging in to the OSG Submit Machine",
            "title": "Exercise 4.1"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#monday-exercise-41-refresher-submitting-multiple-jobs",
            "text": "The goal of this exercise is to map the physical locations of some worker nodes in our local cluster.\nTo do this, you will write a simple submit file that will queue multiple jobs and then manually collate the results.",
            "title": "Monday Exercise 4.1: Refresher \u2013 Submitting Multiple Jobs"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#where-in-the-world-are-my-jobs",
            "text": "To find the physical location of the computers your jobs our running on, you will use a method called  geolocation .\nGeolocation uses a registry to match a computer\u2019s network address to an approximate latitude and longitude.",
            "title": "Where in the world are my jobs?"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#geolocating-several-machines",
            "text": "Now, let\u2019s try to remember some basic HTCondor ideas from earlier today:   Log in to  learn.chtc.wisc.edu  Create and change into a new folder for this exercise, for example  monday-4.1   Download the geolocation code:  username@learn $  wget http://proxy.chtc.wisc.edu/SQUID/osgschool19/location-wrapper.sh  \\ \n                 http://proxy.chtc.wisc.edu/SQUID/osgschool19/wn-geoip.tar.gz  You will be using  location-wrapper.sh  as your executable and  wn-geoip.tar.gz  as an input file.    As always, ensure that your executable has the proper permissions (hint: try running it from the command line)    Create a submit file that generates  fifty  jobs that run  location-wrapper.sh , transfers  wn-geoip.tar.gz  as an\n    input file, and uses the  $(Process)  macro to write different  output  and  error  files.\n    Also, add the following requirement to the submit file (it's not important to know what it does):  Requirements   =   ( HAS_CVMFS_oasis_opensciencegrid_org   =?=   TRUE )   Try to do this step without looking at materials from earlier today.\nBut if you are stuck, see  today\u2019s exercise 2.2 .    Submit your jobs and wait for the results",
            "title": "Geolocating several machines"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#collating-your-results",
            "text": "Now that you have your results, it's time to summarize them.\nRather than inspecting each output file individually, you can use the  cat  command to print the results from all of\nyour output files at once.\nIf all of your output files have the format  location-#.out  (e.g.,  location-10.out ), your command will look something\nlike this:  user@learn $  cat location-*.out  The  *  is a wildcard so the above cat command runs on all files that start with  location-  and end in  .out .\nAdditionally, you can use  cat  in combination with the  sort  and  uniq  commands using \"pipes\" ( | ) to print only\nthe unique results:  user@learn $  cat location-*.out  |  sort  |  uniq",
            "title": "Collating your results"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#mapping-your-results",
            "text": "To visualize the locations of the machines that your jobs ran on, you will be using  http://www.mapcustomizer.com/ .\nCopy and paste the collated results into the text box that pops up when clicking on the 'Bulk Entry' button on the\nright-hand side.\nWhere did your jobs run?",
            "title": "Mapping your results"
        },
        {
            "location": "/materials/day1/part4-ex1-submit-refresher/#next-exercise",
            "text": "Once completed, move onto the next exercise:  Logging in to the OSG Submit Machine",
            "title": "Next exercise"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/",
            "text": "Monday Exercise 4.2: Log in to the OSG Submit Machine\n\u00b6\n\n\nThe goal of this exercise is to log in to a different submit host so that you can start submitting jobs into the OSG\ninstead of the local cluster here at UW-Madison.\nAdditionally, you will learn about the \ntar\n and \nscp\n commands, which will allow you to efficiently copy files between\nthe two submit nodes.\n\n\nIf you have trouble getting \nssh\n access to the submit machine, ask the instructors right away! Gaining access is\ncritical for all remaining exercises.\n\n\nLog in to the OSG submit machine\n\u00b6\n\n\nFor some of the remaining exercises today, you will be using a machine named \ntraining.osgconnect.net\n.\nThe username and password are listed on your 'Accounts' paper that you received yesterday.\nIf you no longer have it, please ask the instructors for help.\n\n\nOnce you have your account details, \nssh\n in to the machine and take a look around.\n\n\nPreparing files for transfer\n\u00b6\n\n\nWhen transferring files between computers, it's best to limit the number of files as well as their size.\nSmaller files transfer more quickly and if your network connection drops, restarting the transfer is less painful than\nit would be if you were transferring large files.\n\n\nArchiving tools (WinZip, 7zip, Archive Utility, etc.) can compress the size of your files and place them into a single,\nsmaller archive file.\nThe \ntar\n command is a one-stop shop for creating, extracting, and viewing the contents of \ntar\n archives (called\ntarballs) whose usage is as follows:\n\n\n\n\n\n\nTo \ncreate\n a tarball named \n<archive filename>\n containing \n<archive contents>\n, use the following command:\n\n\nuser@training $\n tar -czvf <archive filename> <archive contents>\n\n\n\n\n\nWhere \n<archive filename>\n should end in \n.tar.gz\n and \n<archive contents>\n can be a list of any number of files\nand/or folders, separated by spaces.\n\n\n\n\n\n\nTo \nextract\n the files from a tarball into the current directory:\n\n\nuser@training $\n tar -xzvf <archive filename>\n\n\n\n\n\n\n\n\n\nTo \nlist\n the files within a tarball:\n\n\nuser@training $\n tar -tzvf <archive filename>\n\n\n\n\n\n\n\n\n\nUsing the above knowledge, log into \nlearn.chtc.wisc.edu\n, create a tarball that contains Monday's exercise 2.4\ndirectory, and verify that it contains all the proper files.\n\n\nComparing compressed sizes\n\u00b6\n\n\nYou can adjust the level of compression of \ntar\n by prepending your command with \nGZIP=--<COMPRESSION>\n, where\n\n<COMPRESSION>\n can be either \nfast\n for the least compression, or \nbest\n for the most compression (the default\ncompression is between \nbest\n and \nfast\n).\n\n\n\n\nUse \nwget\n to download the following files from our web server:\n\n\nText file: \nhttp://proxy.chtc.wisc.edu/SQUID/osgschool18/random_text\n\n\nArchive: \nhttp://proxy.chtc.wisc.edu/SQUID/osgschool18/pdbaa.tar.gz\n\n\nImage: \nhttp://proxy.chtc.wisc.edu/SQUID/osgschool18/obligatory_cat.jpg\n\n\n\n\n\n\nUse \ntar\n on each file and compare the sizes of the original file and the compressed version.\n\n\n\n\nWhich files were compressed the least? Why?\n\n\nTransferring files\n\u00b6\n\n\nUsing secure copy\n\u00b6\n\n\nSecure copy\n (\nscp\n) is a command based on \nSSH\n that lets you securely copy\nfiles between two different hosts.\nIt takes similar arguments to the \ncp\n command that you are familiar with but also takes additional host information:\n\n\nuser@learn $\n scp <\nsource\n \n1\n> <\nsource\n \n2\n>...<\nsource\n N> <remote host>:<remote path>\n\n\n\n\n\nFor example, if I were logged in to \nlearn.chtc.wisc.edu\n and wanted to copy the file \nfoo\n from my current directory to\nmy home directory on \ntraining.osgconnect.net\n, the command would look like this:\n\n\nuser@learn $\n scp foo training.osgconnect.net:~\n\n\n\n\n\nAdditionally, I could also pull files from \ntraining.osgconnect.net\n to \nlearn.chtc.wisc.edu\n.\nThe following command copies \nbar\n from my home directory on \ntraining.osgconnect.net\n to my current directory on\n\nlearn.chtc.wisc.edu\n:\n\n\nuser@learn $\n scp training.osgconnect.net:~/bar .\n\n\n\n\n\nYou can also copy folders between hosts using the \n-r\n option.\nIf I kept all my files from Monday's exercise 1.3 in a folder named \nmonday-1.3\n on \nlearn.chtc.wisc.edu\n, I could use\nthe following command to copy them to my home directory on \ntraining.osgconnect.net\n:\n\n\nuser@learn $\n scp -r monday-1.3 training.osgconnect.net:~\n\n\n\n\n\nTry copying the tarball you created earlier in this exercise on \nlearn.chtc.wisc.edu\n to \ntraining.osgconnect.net\n.\n\n\nSecure copy from your laptop\n\u00b6\n\n\nDuring your research, you may need to retrieve output files from your submit host to inspect them on your personal\nmachine, which can also be done with \nscp\n! To use \nscp\n on your laptop, follow the instructions relevant to your\nmachine's operating system:\n\n\nMac and Linux users\n\u00b6\n\n\nscp\n should be included by default and available via the terminal on both Mac and Linux operating systems.\nOpen a terminal window on your laptop and try copying the tarball containing Monday's 2.4 exercise from\n\ntraining.osgconnect.net\n to your laptop.\n\n\nWindows users\n\u00b6\n\n\nWinSCP is an \nscp\n client for Windows operating systems.\n\n\n\n\nInstall WinSCP from \nhttps://winscp.net/eng/index.php\n\n\nStart WinSCP and enter your SSH credentials for \ntraining.osgconnect.net\n\n\nCopy the tarball containing Monday's 2.4 exercise exercise to your laptop\n\n\n\n\nExtra challenge: Using rsync\n\u00b6\n\n\nscp\n is a great, ubiquitous tool for one-time transfers but there are better tools if you find yourself transferring\nthe same set of files to the same location repeatedly.\nAnother common tool available on many Linux machines is \nrsync\n, which is like a beefed-up version of \nscp\n.\nThe invocation is similar to \nscp\n: you can transfer files and/or folders, but the options are different and when\ntransferring folders, make sure they don't have a trailing slash (\n/\n, this means to copy all the files within the\nfolder instead of the folder itself):\n\n\nuser@learn $\n rsync -Pavz <\nsource\n \n1\n> <\nsource\n \n2\n>...<\nsource\n N> <remote host>:<remote path>\n\n\n\n\n\nrsync\n has many benefits over \nscp\n but two of its biggest features are built-in compression (so you don't have to\ncreate a tarball) and the ability to only transfer files that have changed.\nBoth of these feature are helpful when you're having connectivity issues so that you don't have to restart the transfer\nfrom scratch every time your connection fails.\n\n\n\n\nUse \nrsync\n to transfer the folder containing today's exercise 1.1 to \ntraining.osgconnect.net\n\n\n\n\nCreate a new file in your exercise 1.1 folder on \nlearn.chtc.wisc.edu\n with the \ntouch\n command:\n\n\nuser@learn $\n touch <filename>\n\n\n\n\n\n\n\n\n\nUse the same \nrsync\n command to transfer the folder with the new file you just created.\n   How many files were transferred the first time? How many files were transferred if you run the same rsync command\n   again?\n\n\n\n\n\n\nNext exercise\n\u00b6\n\n\nOnce completed, move onto the next exercise: \nRunning jobs in the OSG",
            "title": "Exercise 4.2"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#monday-exercise-42-log-in-to-the-osg-submit-machine",
            "text": "The goal of this exercise is to log in to a different submit host so that you can start submitting jobs into the OSG\ninstead of the local cluster here at UW-Madison.\nAdditionally, you will learn about the  tar  and  scp  commands, which will allow you to efficiently copy files between\nthe two submit nodes.  If you have trouble getting  ssh  access to the submit machine, ask the instructors right away! Gaining access is\ncritical for all remaining exercises.",
            "title": "Monday Exercise 4.2: Log in to the OSG Submit Machine"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#log-in-to-the-osg-submit-machine",
            "text": "For some of the remaining exercises today, you will be using a machine named  training.osgconnect.net .\nThe username and password are listed on your 'Accounts' paper that you received yesterday.\nIf you no longer have it, please ask the instructors for help.  Once you have your account details,  ssh  in to the machine and take a look around.",
            "title": "Log in to the OSG submit machine"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#preparing-files-for-transfer",
            "text": "When transferring files between computers, it's best to limit the number of files as well as their size.\nSmaller files transfer more quickly and if your network connection drops, restarting the transfer is less painful than\nit would be if you were transferring large files.  Archiving tools (WinZip, 7zip, Archive Utility, etc.) can compress the size of your files and place them into a single,\nsmaller archive file.\nThe  tar  command is a one-stop shop for creating, extracting, and viewing the contents of  tar  archives (called\ntarballs) whose usage is as follows:    To  create  a tarball named  <archive filename>  containing  <archive contents> , use the following command:  user@training $  tar -czvf <archive filename> <archive contents>  Where  <archive filename>  should end in  .tar.gz  and  <archive contents>  can be a list of any number of files\nand/or folders, separated by spaces.    To  extract  the files from a tarball into the current directory:  user@training $  tar -xzvf <archive filename>    To  list  the files within a tarball:  user@training $  tar -tzvf <archive filename>    Using the above knowledge, log into  learn.chtc.wisc.edu , create a tarball that contains Monday's exercise 2.4\ndirectory, and verify that it contains all the proper files.",
            "title": "Preparing files for transfer"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#comparing-compressed-sizes",
            "text": "You can adjust the level of compression of  tar  by prepending your command with  GZIP=--<COMPRESSION> , where <COMPRESSION>  can be either  fast  for the least compression, or  best  for the most compression (the default\ncompression is between  best  and  fast ).   Use  wget  to download the following files from our web server:  Text file:  http://proxy.chtc.wisc.edu/SQUID/osgschool18/random_text  Archive:  http://proxy.chtc.wisc.edu/SQUID/osgschool18/pdbaa.tar.gz  Image:  http://proxy.chtc.wisc.edu/SQUID/osgschool18/obligatory_cat.jpg    Use  tar  on each file and compare the sizes of the original file and the compressed version.   Which files were compressed the least? Why?",
            "title": "Comparing compressed sizes"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#transferring-files",
            "text": "",
            "title": "Transferring files"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#using-secure-copy",
            "text": "Secure copy  ( scp ) is a command based on  SSH  that lets you securely copy\nfiles between two different hosts.\nIt takes similar arguments to the  cp  command that you are familiar with but also takes additional host information:  user@learn $  scp < source   1 > < source   2 >...< source  N> <remote host>:<remote path>  For example, if I were logged in to  learn.chtc.wisc.edu  and wanted to copy the file  foo  from my current directory to\nmy home directory on  training.osgconnect.net , the command would look like this:  user@learn $  scp foo training.osgconnect.net:~  Additionally, I could also pull files from  training.osgconnect.net  to  learn.chtc.wisc.edu .\nThe following command copies  bar  from my home directory on  training.osgconnect.net  to my current directory on learn.chtc.wisc.edu :  user@learn $  scp training.osgconnect.net:~/bar .  You can also copy folders between hosts using the  -r  option.\nIf I kept all my files from Monday's exercise 1.3 in a folder named  monday-1.3  on  learn.chtc.wisc.edu , I could use\nthe following command to copy them to my home directory on  training.osgconnect.net :  user@learn $  scp -r monday-1.3 training.osgconnect.net:~  Try copying the tarball you created earlier in this exercise on  learn.chtc.wisc.edu  to  training.osgconnect.net .",
            "title": "Using secure copy"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#secure-copy-from-your-laptop",
            "text": "During your research, you may need to retrieve output files from your submit host to inspect them on your personal\nmachine, which can also be done with  scp ! To use  scp  on your laptop, follow the instructions relevant to your\nmachine's operating system:",
            "title": "Secure copy from your laptop"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#mac-and-linux-users",
            "text": "scp  should be included by default and available via the terminal on both Mac and Linux operating systems.\nOpen a terminal window on your laptop and try copying the tarball containing Monday's 2.4 exercise from training.osgconnect.net  to your laptop.",
            "title": "Mac and Linux users"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#windows-users",
            "text": "WinSCP is an  scp  client for Windows operating systems.   Install WinSCP from  https://winscp.net/eng/index.php  Start WinSCP and enter your SSH credentials for  training.osgconnect.net  Copy the tarball containing Monday's 2.4 exercise exercise to your laptop",
            "title": "Windows users"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#extra-challenge-using-rsync",
            "text": "scp  is a great, ubiquitous tool for one-time transfers but there are better tools if you find yourself transferring\nthe same set of files to the same location repeatedly.\nAnother common tool available on many Linux machines is  rsync , which is like a beefed-up version of  scp .\nThe invocation is similar to  scp : you can transfer files and/or folders, but the options are different and when\ntransferring folders, make sure they don't have a trailing slash ( / , this means to copy all the files within the\nfolder instead of the folder itself):  user@learn $  rsync -Pavz < source   1 > < source   2 >...< source  N> <remote host>:<remote path>  rsync  has many benefits over  scp  but two of its biggest features are built-in compression (so you don't have to\ncreate a tarball) and the ability to only transfer files that have changed.\nBoth of these feature are helpful when you're having connectivity issues so that you don't have to restart the transfer\nfrom scratch every time your connection fails.   Use  rsync  to transfer the folder containing today's exercise 1.1 to  training.osgconnect.net   Create a new file in your exercise 1.1 folder on  learn.chtc.wisc.edu  with the  touch  command:  user@learn $  touch <filename>    Use the same  rsync  command to transfer the folder with the new file you just created.\n   How many files were transferred the first time? How many files were transferred if you run the same rsync command\n   again?",
            "title": "Extra challenge: Using rsync"
        },
        {
            "location": "/materials/day1/part4-ex2-login-scp/#next-exercise",
            "text": "Once completed, move onto the next exercise:  Running jobs in the OSG",
            "title": "Next exercise"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/",
            "text": "Monday Exercise 4.3: Running jobs in the OSG\n\u00b6\n\n\nThe goal of this exercise is to have your jobs running on the OSG and map their geographical locations.\n\n\nWhere in the world are my jobs? (Part 2)\n\u00b6\n\n\nIn this version of the geolocating exercise, you will submit jobs to the OSG from \ntraining.osgconnect.net\n and\nhopefully getting back much more interesting results!\nYou will be using the same exact payload as you did in \nexercise 4.1\n.\n\n\nGathering network information from the OSG\n\u00b6\n\n\nNow to create submit files that will run in the OSG!\n\n\n\n\nIf not already logged in, \nssh\n into \ntraining.osgconnect.net\n\n\nMake a new directory for this exercise, \ntuesday-4.3\n and change into it\n\n\nUse \nscp\n or \nrsync\n from \nexercise 1.2\n to copy over the executable and input\n   file from the \nmonday-4.1\n directory from \nlearn\n.\n\n\nRe-create the submit file from exercise 1.1 except this time around change your submit file so that it submits \nfive\n   hundred\n jobs!\n\n\nSubmit your file and wait for the results\n\n\n\n\nMapping your jobs\n\u00b6\n\n\nAs before, you will be using \nhttp://www.mapcustomizer.com/\n to visualize where your jobs have landed in the OSG.\nCopy and paste the collated results from your job output into the bulk creation text box at the bottom of the screen.\nWhere did your jobs end up?\n\n\nNext exercise\n\u00b6\n\n\nOnce completed, move onto the next exercise: \nHardware Differences in the OSG\n\n\nExtra Challenge: Cleaning up your submit directory\n\u00b6\n\n\nIf you run \nls\n in the directory from which you submitted your job, you may see that you now have thousands of files!\nProper data management starts to become a requirement as you start to develop truly HTC workflows;\nyou'll want organize your submit files, code, and input data separate from your output data.\n\n\n\n\n\n\nTry editing your submit file so that all your output and error files are saved to separate directories within your\n   submit directory.\n\n\n\n\nTip\n\n\nExperiment with fewer job submissions until you're confident you have it right, then go back to submitting 1000\njobs!\n\n\n\n\n\n\n\n\nSubmit your file and track the status of your jobs.\n\n\n\n\n\n\nDid your jobs complete successfully with output and error files saved in separate directories?\nIf not, can you find any useful information in the job logs or hold messages?\nIf you get stuck, review the \nslides for submitting many jobs\n.",
            "title": "Exercise 4.3"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#monday-exercise-43-running-jobs-in-the-osg",
            "text": "The goal of this exercise is to have your jobs running on the OSG and map their geographical locations.",
            "title": "Monday Exercise 4.3: Running jobs in the OSG"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#where-in-the-world-are-my-jobs-part-2",
            "text": "In this version of the geolocating exercise, you will submit jobs to the OSG from  training.osgconnect.net  and\nhopefully getting back much more interesting results!\nYou will be using the same exact payload as you did in  exercise 4.1 .",
            "title": "Where in the world are my jobs? (Part 2)"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#gathering-network-information-from-the-osg",
            "text": "Now to create submit files that will run in the OSG!   If not already logged in,  ssh  into  training.osgconnect.net  Make a new directory for this exercise,  tuesday-4.3  and change into it  Use  scp  or  rsync  from  exercise 1.2  to copy over the executable and input\n   file from the  monday-4.1  directory from  learn .  Re-create the submit file from exercise 1.1 except this time around change your submit file so that it submits  five\n   hundred  jobs!  Submit your file and wait for the results",
            "title": "Gathering network information from the OSG"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#mapping-your-jobs",
            "text": "As before, you will be using  http://www.mapcustomizer.com/  to visualize where your jobs have landed in the OSG.\nCopy and paste the collated results from your job output into the bulk creation text box at the bottom of the screen.\nWhere did your jobs end up?",
            "title": "Mapping your jobs"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#next-exercise",
            "text": "Once completed, move onto the next exercise:  Hardware Differences in the OSG",
            "title": "Next exercise"
        },
        {
            "location": "/materials/day1/part4-ex3-submit-osg/#extra-challenge-cleaning-up-your-submit-directory",
            "text": "If you run  ls  in the directory from which you submitted your job, you may see that you now have thousands of files!\nProper data management starts to become a requirement as you start to develop truly HTC workflows;\nyou'll want organize your submit files, code, and input data separate from your output data.    Try editing your submit file so that all your output and error files are saved to separate directories within your\n   submit directory.   Tip  Experiment with fewer job submissions until you're confident you have it right, then go back to submitting 1000\njobs!     Submit your file and track the status of your jobs.    Did your jobs complete successfully with output and error files saved in separate directories?\nIf not, can you find any useful information in the job logs or hold messages?\nIf you get stuck, review the  slides for submitting many jobs .",
            "title": "Extra Challenge: Cleaning up your submit directory"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/",
            "text": "Monday Exercise 4.4: Hardware Differences in the OSG\n\u00b6\n\n\nThe goal of this exercise is to compare hardware differences between our local cluster (CHTC here at UW\u2013Madison) and an\nOSG glidein pool.\nSpecifically, we will look at how easy it is to get access to resources in terms of the amount of memory that is\nrequested.\nThis will not be a very careful study, but should give you some idea of one way in which the pools are different.\n\n\nIn the first two parts of the exercise, you will submit a bunch of jobs that differ only in how much memory each one\nrequests;\nwe call this a \nparameter sweep\n, in that we are testing many possible values of a parameter.\nWe will request memory from 1\u201316 GB, doubling the memory each time.\nOne set of jobs will be submitted locally, and the other, identical set of jobs will be submitted to OSG.\nYou will check the queue periodically to see how many jobs have completed and how many are still waiting to run.\n\n\nPart 1: Checking on the availability of memory (locally)\n\u00b6\n\n\nIn this first part, you will create the submit file for both the local and OSG jobs, then submit the local set.\n\n\nYet another queue syntax\n\u00b6\n\n\nEarlier today, you learned about the \nqueue\n statement and some of the different ways it can be invoked to submit\nmultiple jobs.\nSimilar to the \nqueue from\n statement to submit jobs based on lines from a specific file, you can use \nqueue in\n to\nsubmit jobs based on a list directly from your submit file:\n\n\nqueue\n \n<#\n \nof\n \njobs\n>\n \n<\nvariable\n>\n \nin\n \n(\n\n\n<\nitem\n \n1\n>\n\n\n<\nitem\n \n2\n>\n\n\n<\nitem\n \n3\n>\n\n\n...\n\n\n)\n\n\n\n\n\n\nFor example, to submit 6 jobs that sleep for \n5\n, \n5\n, \n10\n, \n10\n, \n15\n, and \n15\n seconds, you could write the following\nsubmit file:\n\n\nexecutable\n \n=\n \n/\nbin\n/\nsleep\n\n\n\nqueue\n \n2\n \narguments\n \nin\n \n(\n\n\n5\n\n\n10\n\n\n15\n\n\n)\n\n\n\n\n\n\nTry submitting this yourself and check the jobs that end up in the queue with \ncondor_q -nobatch\n.\n\n\nCreate the submit files\n\u00b6\n\n\nTo create our parameter sweep, we will create a \nnew\n submit file with multiple queue statements and change the value of our\nparameter (\nrequest_memory\n) for each batch of jobs.\n\n\n\n\nIf not already, log in to \nlearn.chtc.wisc.edu\n\n\nCreate and change into a new subdirectory called \nmonday-4.4\n \u2013 doing things this way will make Part 2 much easier\n\n\n\n\nCreate a submit file that is named \nsleep.sub\n that executes the command \n/bin/sleep 300\n.\n\n\n\n\nNote\n\n\nIf you do not remember all of the submit statements to write this file, or just to go faster, find a similar\nsubmit file from yesterday.\nCopy the file and rename it here, and make sure the argument to \nsleep\n is \n60\n.\n\n\n\n\n\n\n\n\nUse the \nqueue in\n syntax to submit 10 jobs each for the following memory requests: 4, 8, 16, 32, and 64 GB of memory.\n    You should have 10 jobs requesting 4GB, 10 jobs requesting 8GB, etc.\n\n\n\n\nSave the submit file and exit your editor\n\n\nSubmit your jobs\n\n\n\n\nMonitoring the local jobs\n\u00b6\n\n\nEvery few minutes, run \ncondor_q\n and see how your sleep jobs are doing.\nTo easily see how many jobs of each type you have left, run the following command:\n\n\nuser@learn $\n condor_q <Cluster ID> -af RequestMemory \n|\n sort -n \n|\n uniq -c\n\n\n\n\n\nThe numbers in the left column are the number of jobs left of that type and the number on the right is the amount of\nmemory you requested in MB.\nConsider making a little table like the one below to track progress.\n\n\n\n\n\n\n\n\nMemory\n\n\nRemaining #1\n\n\nRemaining #2\n\n\nRemaining #3\n\n\n\n\n\n\n\n\n\n\n4 GB\n\n\n10\n\n\n6\n\n\n\n\n\n\n\n\n8 GB\n\n\n10\n\n\n7\n\n\n\n\n\n\n\n\n16 GB\n\n\n10\n\n\n8\n\n\n\n\n\n\n\n\n32 GB\n\n\n10\n\n\n9\n\n\n\n\n\n\n\n\n64 GB\n\n\n10\n\n\n10\n\n\n\n\n\n\n\n\n\n\nIn the meantime, between checking on your local jobs, start Part 2 \u2013 taking a break every few minutes to record progress\non your local jobs.\n\n\nPart 2: Checking on the availability of memory (remotely)\n\u00b6\n\n\nFor the second part of the exercise, you will just copy over the directory from part 1 on \nlearn.chtc.wisc.edu\n to\n\ntraining.osgconnect.net\n and resubmit your jobs to the OSG.\nIf you get stuck during the copying process, refer to \nexercise 4.2\n.\n\n\nMonitoring the remote jobs\n\u00b6\n\n\nAs you did in part 1, use \ncondor_q\n to track how your sleep jobs are doing.\nYou can move onto the next exercise but keep tracking the status of your jobs.\nAfter you are done with the \nnext exercise\n, come back to this exercise,\nand move onto part 3.\n\n\nPart 3: Analyzing the results\n\u00b6\n\n\nNow that you've finished the other exercise, how many jobs have completed locally? How many have completed remotely?\n\n\nDue to the dynamic nature of the remote pool, the OSG may have noticed the demand for higher memory jobs and leased more\nhigh memory slots for our pool.\nThat being said, 8GB+ slots are a high-demand, low-availability resource in the OSG so it's unlikely that all of your\n8GB+ jobs matched and ran to completion.\nOn the other hand, the local cluster has plenty of 8GB+ slots so all your jobs have a high chance of running.",
            "title": "Exercise 4.4"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#monday-exercise-44-hardware-differences-in-the-osg",
            "text": "The goal of this exercise is to compare hardware differences between our local cluster (CHTC here at UW\u2013Madison) and an\nOSG glidein pool.\nSpecifically, we will look at how easy it is to get access to resources in terms of the amount of memory that is\nrequested.\nThis will not be a very careful study, but should give you some idea of one way in which the pools are different.  In the first two parts of the exercise, you will submit a bunch of jobs that differ only in how much memory each one\nrequests;\nwe call this a  parameter sweep , in that we are testing many possible values of a parameter.\nWe will request memory from 1\u201316 GB, doubling the memory each time.\nOne set of jobs will be submitted locally, and the other, identical set of jobs will be submitted to OSG.\nYou will check the queue periodically to see how many jobs have completed and how many are still waiting to run.",
            "title": "Monday Exercise 4.4: Hardware Differences in the OSG"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#part-1-checking-on-the-availability-of-memory-locally",
            "text": "In this first part, you will create the submit file for both the local and OSG jobs, then submit the local set.",
            "title": "Part 1: Checking on the availability of memory (locally)"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#yet-another-queue-syntax",
            "text": "Earlier today, you learned about the  queue  statement and some of the different ways it can be invoked to submit\nmultiple jobs.\nSimilar to the  queue from  statement to submit jobs based on lines from a specific file, you can use  queue in  to\nsubmit jobs based on a list directly from your submit file:  queue   <#   of   jobs >   < variable >   in   (  < item   1 >  < item   2 >  < item   3 >  ...  )   For example, to submit 6 jobs that sleep for  5 ,  5 ,  10 ,  10 ,  15 , and  15  seconds, you could write the following\nsubmit file:  executable   =   / bin / sleep  queue   2   arguments   in   (  5  10  15  )   Try submitting this yourself and check the jobs that end up in the queue with  condor_q -nobatch .",
            "title": "Yet another queue syntax"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#create-the-submit-files",
            "text": "To create our parameter sweep, we will create a  new  submit file with multiple queue statements and change the value of our\nparameter ( request_memory ) for each batch of jobs.   If not already, log in to  learn.chtc.wisc.edu  Create and change into a new subdirectory called  monday-4.4  \u2013 doing things this way will make Part 2 much easier   Create a submit file that is named  sleep.sub  that executes the command  /bin/sleep 300 .   Note  If you do not remember all of the submit statements to write this file, or just to go faster, find a similar\nsubmit file from yesterday.\nCopy the file and rename it here, and make sure the argument to  sleep  is  60 .     Use the  queue in  syntax to submit 10 jobs each for the following memory requests: 4, 8, 16, 32, and 64 GB of memory.\n    You should have 10 jobs requesting 4GB, 10 jobs requesting 8GB, etc.   Save the submit file and exit your editor  Submit your jobs",
            "title": "Create the submit files"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#monitoring-the-local-jobs",
            "text": "Every few minutes, run  condor_q  and see how your sleep jobs are doing.\nTo easily see how many jobs of each type you have left, run the following command:  user@learn $  condor_q <Cluster ID> -af RequestMemory  |  sort -n  |  uniq -c  The numbers in the left column are the number of jobs left of that type and the number on the right is the amount of\nmemory you requested in MB.\nConsider making a little table like the one below to track progress.     Memory  Remaining #1  Remaining #2  Remaining #3      4 GB  10  6     8 GB  10  7     16 GB  10  8     32 GB  10  9     64 GB  10  10      In the meantime, between checking on your local jobs, start Part 2 \u2013 taking a break every few minutes to record progress\non your local jobs.",
            "title": "Monitoring the local jobs"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#part-2-checking-on-the-availability-of-memory-remotely",
            "text": "For the second part of the exercise, you will just copy over the directory from part 1 on  learn.chtc.wisc.edu  to training.osgconnect.net  and resubmit your jobs to the OSG.\nIf you get stuck during the copying process, refer to  exercise 4.2 .",
            "title": "Part 2: Checking on the availability of memory (remotely)"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#monitoring-the-remote-jobs",
            "text": "As you did in part 1, use  condor_q  to track how your sleep jobs are doing.\nYou can move onto the next exercise but keep tracking the status of your jobs.\nAfter you are done with the  next exercise , come back to this exercise,\nand move onto part 3.",
            "title": "Monitoring the remote jobs"
        },
        {
            "location": "/materials/day1/part4-ex4-hardware-diffs/#part-3-analyzing-the-results",
            "text": "Now that you've finished the other exercise, how many jobs have completed locally? How many have completed remotely?  Due to the dynamic nature of the remote pool, the OSG may have noticed the demand for higher memory jobs and leased more\nhigh memory slots for our pool.\nThat being said, 8GB+ slots are a high-demand, low-availability resource in the OSG so it's unlikely that all of your\n8GB+ jobs matched and ran to completion.\nOn the other hand, the local cluster has plenty of 8GB+ slots so all your jobs have a high chance of running.",
            "title": "Part 3: Analyzing the results"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/",
            "text": "Monday Exercise 4.5: Software Differences in the OSG\n\u00b6\n\n\nThe goal of this exercise is to see the differences in availability of software in the OSG.\nAt your local cluster, you may be used to having certain versions of software but out on the OSG, it's possible that the\nsoftware you need won't even be installed.\n\n\nRefresher - condor_status\n\u00b6\n\n\nThe OSG pool, like the local pool you used earlier today, is just another HTCondor pool.\nThis means that the commands you use will be the same and the jobs you submit can have similar payloads but there is one\nmajor difference: the slots are different!\nYou can use the \ncondor_status\n command just as you did yesterday to inspect these differences.\n\n\n\n\nOpen two terminal windows side-by-side\n\n\nLog in to \nlearn.chtc.wisc.edu\n in one window and \ntraining.osgconnect.net\n in the other\n\n\nRun \ncondor_status\n in both windows\n\n\n\n\nNotice any differences?\n\n\nComparing operating systems\n\u00b6\n\n\nTo really see differences between slots in the local cluster vs the OSG, you will want to compare the slot ClassAds\nbetween the two pools.\nRather than inspecting the very long ClassAd for each slot, you will look at a specific attribute called \nOpSysAndVer\n,\nwhich tells us the operating system version of the machine where a slot resides.\nAn easy way to show this attribute for all slots is by using \ncondor_status\n in conjunction with the \n-autoformat\n\noption.\n\n-autoformat\n like the \n-format\n option you learned about yesterday will print out the attributes you're interested in\nfor each slot but as you probably guessed, it does some automatic formatting for you.\nSo to show the operating system and version of each slot, run the following command in both of your terminal windows:\n\n\nuser@submit-host $\n condor_status -autoformat OpSysAndVer\n\n\n\n\n\nYou will see many values with the type of operating system at the front and the version number at the end (i.e. SL6\nstands for Scientific Linux 6).\nThe only problem is that with hundreds or thousands of slots, it's difficult to get a feel for the composition of each\npool from this output.\nYou can find a count for each operating system by passing the \ncondor_status\n output into the \nsort\n and \nuniq\n\ncommands.\nYour command line should look something like this:\n\n\nuser@learn $\n condor_status -autoformat OpSysAndVer \n|\n sort \n|\n uniq -c\n\n\n\n\n\n\n\nNote\n\n\nFor \ntraining.osgconnect.net\n you will need to add the flag \n-pool flock.opensciencegrid.org\n to your \ncondor_status\n\ncommand.\n\n\n\n\nCan you spot the differences between the two pools now?\n\n\nSubmitting probe jobs\n\u00b6\n\n\nKnowing the type and version of the operating systems is a step in the right direction to knowing what kind of software\nwill be available on the machines that your jobs land on.\nHowever it still only serves as a proxy to the information that you really want: does the machine have the software that\nyou want?\nDoes it have the correct version?\n\n\nSoftware probe code\n\u00b6\n\n\nThe following shell script probes for software and returns the version if it is installed:\n\n\n#!/bin/sh\n\n\nget_version\n(){\n\n    \nprogram\n=\n$1\n\n    \n$program\n --version > /dev/null \n2\n>\n&\n1\n\n    \ndouble_dash_rc\n=\n$?\n\n    \n$program\n -version > /dev/null \n2\n>\n&\n1\n\n    \nsingle_dash_rc\n=\n$?\n\n    which \n$program\n > /dev/null \n2\n>\n&\n1\n\n    \nwhich_rc\n=\n$?\n\n    \nif\n \n[\n \n$double_dash_rc\n -eq \n0\n \n]\n;\n \nthen\n\n        \n$program\n --version \n2\n>\n&\n1\n\n    \nelif\n \n[\n \n$single_dash_rc\n -eq \n0\n \n]\n;\n \nthen\n\n        \n$program\n -version \n2\n>\n&\n1\n\n    \nelif\n \n[\n \n$which_rc\n -eq \n0\n \n]\n;\n \nthen\n\n        \necho\n \n\"\n$program\n installed but could not find version information\"\n\n    \nelse\n\n        \necho\n \n\"\n$program\n not installed\"\n\n    \nfi\n\n\n}\n\n\nget_version \n'R'\n\nget_version \n'cmake'\n\nget_version \n'python'\n\n\n\n\n\n\nIf there's a specific command line program that your research requires, feel free to add it to the script!\nFor example, if you wanted to test for the existence and version of \nnslookup\n, you would add the following to the end\nof the script:\n\n\nget_version\n \n'nslookup'\n\n\n\n\n\n\nProbing several machines\n\u00b6\n\n\nFor this part of the exercise, try creating a submit file without referring to previous exercises!\n\n\n\n\nLog in to \ntraining.osgconnect.net\n\n\nCreate and change into a new folder for this exercise, e.g. \nmonday-4.5\n\n\nSave the above script as a file named \nsw_probe.sh\n\n\nAs always, make sure that you can run your script from the command line before asking HTCondor to do so\n\n\nCreate a submit file that runs \nsw_probe.sh\n 100 times and uses macros to write different \noutput\n, \nerror\n, and\n    \nlog\n files\n\n\nSubmit your job and wait for the results\n\n\n\n\nWill you be able to do your research on the OSG with what's available?\nDon't fret if it doesn't look like you can: over the next few days, you'll learn how to make your jobs portable enough\nso that they can run anywhere!",
            "title": "Exercise 4.5"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#monday-exercise-45-software-differences-in-the-osg",
            "text": "The goal of this exercise is to see the differences in availability of software in the OSG.\nAt your local cluster, you may be used to having certain versions of software but out on the OSG, it's possible that the\nsoftware you need won't even be installed.",
            "title": "Monday Exercise 4.5: Software Differences in the OSG"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#refresher-condor95status",
            "text": "The OSG pool, like the local pool you used earlier today, is just another HTCondor pool.\nThis means that the commands you use will be the same and the jobs you submit can have similar payloads but there is one\nmajor difference: the slots are different!\nYou can use the  condor_status  command just as you did yesterday to inspect these differences.   Open two terminal windows side-by-side  Log in to  learn.chtc.wisc.edu  in one window and  training.osgconnect.net  in the other  Run  condor_status  in both windows   Notice any differences?",
            "title": "Refresher - condor_status"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#comparing-operating-systems",
            "text": "To really see differences between slots in the local cluster vs the OSG, you will want to compare the slot ClassAds\nbetween the two pools.\nRather than inspecting the very long ClassAd for each slot, you will look at a specific attribute called  OpSysAndVer ,\nwhich tells us the operating system version of the machine where a slot resides.\nAn easy way to show this attribute for all slots is by using  condor_status  in conjunction with the  -autoformat \noption. -autoformat  like the  -format  option you learned about yesterday will print out the attributes you're interested in\nfor each slot but as you probably guessed, it does some automatic formatting for you.\nSo to show the operating system and version of each slot, run the following command in both of your terminal windows:  user@submit-host $  condor_status -autoformat OpSysAndVer  You will see many values with the type of operating system at the front and the version number at the end (i.e. SL6\nstands for Scientific Linux 6).\nThe only problem is that with hundreds or thousands of slots, it's difficult to get a feel for the composition of each\npool from this output.\nYou can find a count for each operating system by passing the  condor_status  output into the  sort  and  uniq \ncommands.\nYour command line should look something like this:  user@learn $  condor_status -autoformat OpSysAndVer  |  sort  |  uniq -c   Note  For  training.osgconnect.net  you will need to add the flag  -pool flock.opensciencegrid.org  to your  condor_status \ncommand.   Can you spot the differences between the two pools now?",
            "title": "Comparing operating systems"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#submitting-probe-jobs",
            "text": "Knowing the type and version of the operating systems is a step in the right direction to knowing what kind of software\nwill be available on the machines that your jobs land on.\nHowever it still only serves as a proxy to the information that you really want: does the machine have the software that\nyou want?\nDoes it have the correct version?",
            "title": "Submitting probe jobs"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#software-probe-code",
            "text": "The following shell script probes for software and returns the version if it is installed:  #!/bin/sh \n\nget_version (){ \n     program = $1 \n     $program  --version > /dev/null  2 > & 1 \n     double_dash_rc = $? \n     $program  -version > /dev/null  2 > & 1 \n     single_dash_rc = $? \n    which  $program  > /dev/null  2 > & 1 \n     which_rc = $? \n     if   [   $double_dash_rc  -eq  0   ] ;   then \n         $program  --version  2 > & 1 \n     elif   [   $single_dash_rc  -eq  0   ] ;   then \n         $program  -version  2 > & 1 \n     elif   [   $which_rc  -eq  0   ] ;   then \n         echo   \" $program  installed but could not find version information\" \n     else \n         echo   \" $program  not installed\" \n     fi  } \n\nget_version  'R' \nget_version  'cmake' \nget_version  'python'   If there's a specific command line program that your research requires, feel free to add it to the script!\nFor example, if you wanted to test for the existence and version of  nslookup , you would add the following to the end\nof the script:  get_version   'nslookup'",
            "title": "Software probe code"
        },
        {
            "location": "/materials/day1/part4-ex5-software-diffs/#probing-several-machines",
            "text": "For this part of the exercise, try creating a submit file without referring to previous exercises!   Log in to  training.osgconnect.net  Create and change into a new folder for this exercise, e.g.  monday-4.5  Save the above script as a file named  sw_probe.sh  As always, make sure that you can run your script from the command line before asking HTCondor to do so  Create a submit file that runs  sw_probe.sh  100 times and uses macros to write different  output ,  error , and\n     log  files  Submit your job and wait for the results   Will you be able to do your research on the OSG with what's available?\nDon't fret if it doesn't look like you can: over the next few days, you'll learn how to make your jobs portable enough\nso that they can run anywhere!",
            "title": "Probing several machines"
        }
    ]
}